{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Tasks(_ref){let{isAdding,setIsAdding}=_ref;const[tasks,setTasks]=useState([]);const[editableTaskId,setEditableTaskId]=useState(null);const[inputName,setInputName]=useState('');const[inputDescription,setInputDescription]=useState('');useEffect(()=>{fetchTasks();},[]);useEffect(()=>{if(isAdding&&tasks&&tasks.length>0){const newTask=tasks[tasks.length-1];setEditableTaskId(newTask.task_id);setInputName(newTask.task_name);setInputDescription(newTask.task_description);setIsAdding(false);}},[isAdding,tasks,setIsAdding]);const fetchTasks=async()=>{const response=await fetch('/tasks');const data=await response.json();setTasks(data);};const addTask=async()=>{const response=await fetch('/add_task',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task_name:'New Task',task_description:'Task Description'})});const newTask=await response.json();setTasks([...tasks,newTask]);setIsAdding(true);};const updateTask=async id=>{await fetch(\"/add_task\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task_id:id,task_name:inputName,task_description:inputDescription})});fetchTasks();setEditableTaskId(null);};const deleteTask=async id=>{await fetch(\"/delete_task\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task_id:id})});fetchTasks();};const completeTask=async id=>{await fetch(\"/complete_task\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task_id:id})});fetchTasks();};const handleNameChange=e=>{setInputName(e.target.value);};const handleDescriptionChange=e=>{setInputDescription(e.target.value);};const handleBlur=id=>{updateTask(id);};const handleKeyDown=(e,id)=>{if(e.key==='Enter'){e.currentTarget.blur();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task\"}),tasks.map(task=>/*#__PURE__*/_jsx(\"div\",{className:\"card card-compact w-96 shadow-xl\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[editableTaskId===task.task_id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputName,onChange:handleNameChange,onBlur:()=>handleBlur(task.task_id),onKeyDown:e=>handleKeyDown(e,task.task_id),autoFocus:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputDescription,onChange:handleDescriptionChange,onBlur:()=>handleBlur(task.task_id),onKeyDown:e=>handleKeyDown(e,task.task_id)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-xl\",onClick:()=>{setEditableTaskId(task.task_id);setInputName(task.task_name);setInputDescription(task.task_description);},children:task.task_name||'New Task'}),/*#__PURE__*/_jsx(\"p\",{children:task.task_description||'Task Description'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.task_id),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>completeTask(task.task_id),children:\"Complete\"})]})},task.task_id))]});}export default Tasks;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Tasks","_ref","isAdding","setIsAdding","tasks","setTasks","editableTaskId","setEditableTaskId","inputName","setInputName","inputDescription","setInputDescription","fetchTasks","length","newTask","task_id","task_name","task_description","response","fetch","data","json","addTask","method","headers","body","JSON","stringify","updateTask","id","deleteTask","completeTask","handleNameChange","e","target","value","handleDescriptionChange","handleBlur","handleKeyDown","key","currentTarget","blur","children","onClick","map","task","className","type","onChange","onBlur","onKeyDown","autoFocus"],"sources":["C:/Users/cdmal/Pomigos/client/src/components/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Tasks({ isAdding, setIsAdding }) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [editableTaskId, setEditableTaskId] = useState(null);\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputDescription, setInputDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isAdding && tasks && tasks.length > 0) {\r\n            const newTask = tasks[tasks.length - 1];\r\n            setEditableTaskId(newTask.task_id);\r\n            setInputName(newTask.task_name);\r\n            setInputDescription(newTask.task_description);\r\n            setIsAdding(false);\r\n        }\r\n    }, [isAdding, tasks, setIsAdding]);\r\n\r\n    const fetchTasks = async () => {\r\n        const response = await fetch('/tasks');\r\n        const data = await response.json();\r\n        setTasks(data);\r\n    };\r\n\r\n    const addTask = async () => {\r\n        const response = await fetch('/add_task', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ task_name: 'New Task', task_description: 'Task Description' })\r\n        });\r\n        const newTask = await response.json();\r\n        setTasks([...tasks, newTask]);\r\n        setIsAdding(true);\r\n    };\r\n\r\n    const updateTask = async (id) => {\r\n        await fetch(`/add_task`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ task_id: id, task_name: inputName, task_description: inputDescription })\r\n        });\r\n        fetchTasks();\r\n        setEditableTaskId(null);\r\n    };\r\n\r\n    const deleteTask = async (id) => {\r\n        await fetch(`/delete_task`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ task_id: id })\r\n        });\r\n        fetchTasks();\r\n    };\r\n\r\n    const completeTask = async (id) => {\r\n        await fetch(`/complete_task`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ task_id: id })\r\n        });\r\n        fetchTasks();\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setInputName(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        setInputDescription(e.target.value);\r\n    };\r\n\r\n    const handleBlur = (id) => {\r\n        updateTask(id);\r\n    };\r\n\r\n    const handleKeyDown = (e, id) => {\r\n        if (e.key === 'Enter') {\r\n            e.currentTarget.blur();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={addTask}>Add Task</button>\r\n            {tasks.map((task) => (\r\n                <div className=\"card card-compact w-96 shadow-xl\" key={task.task_id}>\r\n                    <div className=\"card-body\">\r\n                        {editableTaskId === task.task_id ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputName}\r\n                                    onChange={handleNameChange}\r\n                                    onBlur={() => handleBlur(task.task_id)}\r\n                                    onKeyDown={(e) => handleKeyDown(e, task.task_id)}\r\n                                    autoFocus\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputDescription}\r\n                                    onChange={handleDescriptionChange}\r\n                                    onBlur={() => handleBlur(task.task_id)}\r\n                                    onKeyDown={(e) => handleKeyDown(e, task.task_id)}\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <h2 className=\"card-title text-xl\" onClick={() => {\r\n                                    setEditableTaskId(task.task_id);\r\n                                    setInputName(task.task_name);\r\n                                    setInputDescription(task.task_description);\r\n                                }}>\r\n                                    {task.task_name || 'New Task'}\r\n                                </h2>\r\n                                <p>{task.task_description || 'Task Description'}</p>\r\n                            </>\r\n                        )}\r\n                        <button onClick={() => deleteTask(task.task_id)}>Delete</button>\r\n                        <button onClick={() => completeTask(task.task_id)}>Complete</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tasks;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAAF,IAAA,CACpC,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACkB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAE5DC,SAAS,CAAC,IAAM,CACZmB,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAENnB,SAAS,CAAC,IAAM,CACZ,GAAIS,QAAQ,EAAIE,KAAK,EAAIA,KAAK,CAACS,MAAM,CAAG,CAAC,CAAE,CACvC,KAAM,CAAAC,OAAO,CAAGV,KAAK,CAACA,KAAK,CAACS,MAAM,CAAG,CAAC,CAAC,CACvCN,iBAAiB,CAACO,OAAO,CAACC,OAAO,CAAC,CAClCN,YAAY,CAACK,OAAO,CAACE,SAAS,CAAC,CAC/BL,mBAAmB,CAACG,OAAO,CAACG,gBAAgB,CAAC,CAC7Cd,WAAW,CAAC,KAAK,CAAC,CACtB,CACJ,CAAC,CAAE,CAACD,QAAQ,CAAEE,KAAK,CAAED,WAAW,CAAC,CAAC,CAElC,KAAM,CAAAS,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,QAAQ,CAAC,CACtC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClChB,QAAQ,CAACe,IAAI,CAAC,CAClB,CAAC,CAED,KAAM,CAAAE,OAAO,CAAG,KAAAA,CAAA,GAAY,CACxB,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,WAAW,CAAE,CACtCI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,SAAS,CAAE,UAAU,CAAEC,gBAAgB,CAAE,kBAAmB,CAAC,CACxF,CAAC,CAAC,CACF,KAAM,CAAAH,OAAO,CAAG,KAAM,CAAAI,QAAQ,CAACG,IAAI,CAAC,CAAC,CACrChB,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEU,OAAO,CAAC,CAAC,CAC7BX,WAAW,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAyB,UAAU,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC7B,KAAM,CAAAV,KAAK,aAAc,CACrBI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEZ,OAAO,CAAEc,EAAE,CAAEb,SAAS,CAAER,SAAS,CAAES,gBAAgB,CAAEP,gBAAiB,CAAC,CAClG,CAAC,CAAC,CACFE,UAAU,CAAC,CAAC,CACZL,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAuB,UAAU,CAAG,KAAO,CAAAD,EAAE,EAAK,CAC7B,KAAM,CAAAV,KAAK,gBAAiB,CACxBI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEZ,OAAO,CAAEc,EAAG,CAAC,CACxC,CAAC,CAAC,CACFjB,UAAU,CAAC,CAAC,CAChB,CAAC,CAED,KAAM,CAAAmB,YAAY,CAAG,KAAO,CAAAF,EAAE,EAAK,CAC/B,KAAM,CAAAV,KAAK,kBAAmB,CAC1BI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEZ,OAAO,CAAEc,EAAG,CAAC,CACxC,CAAC,CAAC,CACFjB,UAAU,CAAC,CAAC,CAChB,CAAC,CAED,KAAM,CAAAoB,gBAAgB,CAAIC,CAAC,EAAK,CAC5BxB,YAAY,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,uBAAuB,CAAIH,CAAC,EAAK,CACnCtB,mBAAmB,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACvC,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIR,EAAE,EAAK,CACvBD,UAAU,CAACC,EAAE,CAAC,CAClB,CAAC,CAED,KAAM,CAAAS,aAAa,CAAGA,CAACL,CAAC,CAAEJ,EAAE,GAAK,CAC7B,GAAII,CAAC,CAACM,GAAG,GAAK,OAAO,CAAE,CACnBN,CAAC,CAACO,aAAa,CAACC,IAAI,CAAC,CAAC,CAC1B,CACJ,CAAC,CAED,mBACI1C,KAAA,CAAAF,SAAA,EAAA6C,QAAA,eACI/C,IAAA,WAAQgD,OAAO,CAAErB,OAAQ,CAAAoB,QAAA,CAAC,UAAQ,CAAQ,CAAC,CAC1CtC,KAAK,CAACwC,GAAG,CAAEC,IAAI,eACZlD,IAAA,QAAKmD,SAAS,CAAC,kCAAkC,CAAAJ,QAAA,cAC7C3C,KAAA,QAAK+C,SAAS,CAAC,WAAW,CAAAJ,QAAA,EACrBpC,cAAc,GAAKuC,IAAI,CAAC9B,OAAO,cAC5BhB,KAAA,CAAAF,SAAA,EAAA6C,QAAA,eACI/C,IAAA,UACIoD,IAAI,CAAC,MAAM,CACXZ,KAAK,CAAE3B,SAAU,CACjBwC,QAAQ,CAAEhB,gBAAiB,CAC3BiB,MAAM,CAAEA,CAAA,GAAMZ,UAAU,CAACQ,IAAI,CAAC9B,OAAO,CAAE,CACvCmC,SAAS,CAAGjB,CAAC,EAAKK,aAAa,CAACL,CAAC,CAAEY,IAAI,CAAC9B,OAAO,CAAE,CACjDoC,SAAS,MACZ,CAAC,cACFxD,IAAA,UACIoD,IAAI,CAAC,MAAM,CACXZ,KAAK,CAAEzB,gBAAiB,CACxBsC,QAAQ,CAAEZ,uBAAwB,CAClCa,MAAM,CAAEA,CAAA,GAAMZ,UAAU,CAACQ,IAAI,CAAC9B,OAAO,CAAE,CACvCmC,SAAS,CAAGjB,CAAC,EAAKK,aAAa,CAACL,CAAC,CAAEY,IAAI,CAAC9B,OAAO,CAAE,CACpD,CAAC,EACJ,CAAC,cAEHhB,KAAA,CAAAF,SAAA,EAAA6C,QAAA,eACI/C,IAAA,OAAImD,SAAS,CAAC,oBAAoB,CAACH,OAAO,CAAEA,CAAA,GAAM,CAC9CpC,iBAAiB,CAACsC,IAAI,CAAC9B,OAAO,CAAC,CAC/BN,YAAY,CAACoC,IAAI,CAAC7B,SAAS,CAAC,CAC5BL,mBAAmB,CAACkC,IAAI,CAAC5B,gBAAgB,CAAC,CAC9C,CAAE,CAAAyB,QAAA,CACGG,IAAI,CAAC7B,SAAS,EAAI,UAAU,CAC7B,CAAC,cACLrB,IAAA,MAAA+C,QAAA,CAAIG,IAAI,CAAC5B,gBAAgB,EAAI,kBAAkB,CAAI,CAAC,EACtD,CACL,cACDtB,IAAA,WAAQgD,OAAO,CAAEA,CAAA,GAAMb,UAAU,CAACe,IAAI,CAAC9B,OAAO,CAAE,CAAA2B,QAAA,CAAC,QAAM,CAAQ,CAAC,cAChE/C,IAAA,WAAQgD,OAAO,CAAEA,CAAA,GAAMZ,YAAY,CAACc,IAAI,CAAC9B,OAAO,CAAE,CAAA2B,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnE,CAAC,EAlC6CG,IAAI,CAAC9B,OAmCvD,CACR,CAAC,EACJ,CAAC,CAEX,CAEA,cAAe,CAAAf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}