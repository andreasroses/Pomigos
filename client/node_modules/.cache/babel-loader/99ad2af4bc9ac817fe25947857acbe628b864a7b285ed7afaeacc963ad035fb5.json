{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\current-classes\\\\CS4843\\\\Pomigos\\\\client\\\\src\\\\components\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tasks({\n  editableBoardId\n}) {\n  _s();\n  const [isAdding, setIsAdding] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [editableTaskId, setEditableTaskId] = useState(null);\n  const [inputName, setInputName] = useState('');\n  const [inputDescription, setInputDescription] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, [isAdding]);\n  useEffect(() => {\n    if (isAdding && tasks.length > 0) {\n      const newTask = tasks[tasks.length - 1];\n      setEditableTaskId(newTask.task_id);\n      setInputName(newTask.task_name);\n      setInputDescription(newTask.task_description);\n      setIsAdding(false);\n    }\n  }, [isAdding, tasks, setIsAdding]);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/tasks', {}, {\n        params: {\n          board_id: editableBoardId\n        }\n      }); // Fetch tasks for the given boardID\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error);\n    }\n  };\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/add_task', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task_name: 'New Task',\n          task_description: 'Task Description',\n          board_id: boardID\n        })\n      });\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n      setIsAdding(true);\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n  };\n  const updateTask = async id => {\n    try {\n      await fetch(`http://localhost:5000/update_task/${id}`, {\n        // Ensure this endpoint exists\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task_name: inputName,\n          task_description: inputDescription\n        })\n      });\n      fetchTasks();\n      setEditableTaskId(null);\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await fetch(`http://localhost:5000/delete_task/${id}`, {\n        // Ensure this endpoint exists\n        method: 'DELETE'\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    }\n  };\n  const completeTask = async id => {\n    try {\n      await fetch(`http://localhost:5000/complete_task/${id}`, {\n        // Ensure this endpoint exists\n        method: 'POST'\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Failed to complete task:', error);\n    }\n  };\n  const handleNameChange = e => {\n    setInputName(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setInputDescription(e.target.value);\n  };\n  const handleBlur = id => {\n    updateTask(id);\n  };\n  const handleKeyDown = (e, id) => {\n    if (e.key === 'Enter') {\n      e.currentTarget.blur();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-compact w-96 shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [editableTaskId === task.task_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputName,\n            onChange: handleNameChange,\n            onBlur: () => handleBlur(task.task_id),\n            onKeyDown: e => handleKeyDown(e, task.task_id),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputDescription,\n            onChange: handleDescriptionChange,\n            onBlur: () => handleBlur(task.task_id),\n            onKeyDown: e => handleKeyDown(e, task.task_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title text-xl\",\n            onClick: () => {\n              setEditableTaskId(task.task_id);\n              setInputName(task.task_name);\n              setInputDescription(task.task_description);\n            },\n            children: task.task_name || 'New Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.task_description || 'Task Description'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.task_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeTask(task.task_id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, task.task_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n_s(Tasks, \"9090AxbCKqyyVh9wwgevmqbUSSw=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","editableBoardId","_s","isAdding","setIsAdding","tasks","setTasks","editableTaskId","setEditableTaskId","inputName","setInputName","inputDescription","setInputDescription","fetchTasks","length","newTask","task_id","task_name","task_description","response","get","params","board_id","data","json","error","console","addTask","fetch","method","headers","body","JSON","stringify","boardID","updateTask","id","deleteTask","completeTask","handleNameChange","e","target","value","handleDescriptionChange","handleBlur","handleKeyDown","key","currentTarget","blur","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","task","className","type","onChange","onBlur","onKeyDown","autoFocus","_c","$RefreshReg$"],"sources":["D:/Documents/current-classes/CS4843/Pomigos/client/src/components/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { socket } from '../socket';\r\nfunction Tasks({ editableBoardId }) {\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [editableTaskId, setEditableTaskId] = useState(null);\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputDescription, setInputDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [isAdding]);\r\n\r\n    useEffect(() => {\r\n        if (isAdding && tasks.length > 0) {\r\n            const newTask = tasks[tasks.length - 1];\r\n            setEditableTaskId(newTask.task_id);\r\n            setInputName(newTask.task_name);\r\n            setInputDescription(newTask.task_description);\r\n            setIsAdding(false);\r\n        }\r\n    }, [isAdding, tasks, setIsAdding]);\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/tasks', {}, {\r\n                params: { board_id: editableBoardId}\r\n            }); // Fetch tasks for the given boardID\r\n            const data = await response.json();\r\n            setTasks(data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch tasks:', error);\r\n        }\r\n    };\r\n\r\n    const addTask = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/add_task', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    task_name: 'New Task',\r\n                    task_description: 'Task Description',\r\n                    board_id: boardID\r\n                })\r\n            });\r\n            const newTask = await response.json();\r\n            setTasks([...tasks, newTask]);\r\n            setIsAdding(true);\r\n        } catch (error) {\r\n            console.error('Failed to add task:', error);\r\n        }\r\n    };\r\n\r\n    const updateTask = async (id) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/update_task/${id}`, { // Ensure this endpoint exists\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ task_name: inputName, task_description: inputDescription })\r\n            });\r\n            fetchTasks();\r\n            setEditableTaskId(null);\r\n        } catch (error) {\r\n            console.error('Failed to update task:', error);\r\n        }\r\n    };\r\n\r\n    const deleteTask = async (id) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/delete_task/${id}`, { // Ensure this endpoint exists\r\n                method: 'DELETE'\r\n            });\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Failed to delete task:', error);\r\n        }\r\n    };\r\n\r\n    const completeTask = async (id) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/complete_task/${id}`, { // Ensure this endpoint exists\r\n                method: 'POST'\r\n            });\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Failed to complete task:', error);\r\n        }\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setInputName(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        setInputDescription(e.target.value);\r\n    };\r\n\r\n    const handleBlur = (id) => {\r\n        updateTask(id);\r\n    };\r\n\r\n    const handleKeyDown = (e, id) => {\r\n        if (e.key === 'Enter') {\r\n            e.currentTarget.blur();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={addTask}>Add Task</button>\r\n            {tasks.map((task) => (\r\n                <div className=\"card card-compact w-96 shadow-xl\" key={task.task_id}>\r\n                    <div className=\"card-body\">\r\n                        {editableTaskId === task.task_id ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputName}\r\n                                    onChange={handleNameChange}\r\n                                    onBlur={() => handleBlur(task.task_id)}\r\n                                    onKeyDown={(e) => handleKeyDown(e, task.task_id)}\r\n                                    autoFocus\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputDescription}\r\n                                    onChange={handleDescriptionChange}\r\n                                    onBlur={() => handleBlur(task.task_id)}\r\n                                    onKeyDown={(e) => handleKeyDown(e, task.task_id)}\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <h2 className=\"card-title text-xl\" onClick={() => {\r\n                                    setEditableTaskId(task.task_id);\r\n                                    setInputName(task.task_name);\r\n                                    setInputDescription(task.task_description);\r\n                                }}>\r\n                                    {task.task_name || 'New Task'}\r\n                                </h2>\r\n                                <p>{task.task_description || 'Task Description'}</p>\r\n                            </>\r\n                        )}\r\n                        <button onClick={() => deleteTask(task.task_id)}>Delete</button>\r\n                        <button onClick={() => completeTask(task.task_id)}>Complete</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}