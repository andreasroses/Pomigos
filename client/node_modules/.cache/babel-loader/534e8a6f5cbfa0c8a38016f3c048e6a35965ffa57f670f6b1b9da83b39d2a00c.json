{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\current-classes\\\\CS4843\\\\Pomigos\\\\client\\\\src\\\\components\\\\RoomManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomManager = ({\n  roomID,\n  setRoomID\n}) => {\n  _s();\n  const [newRoomID, setNewRoomID] = useState(null);\n  const [roomURL, setRoomURL] = useState('');\n  useEffect(() => {\n    // If a roomID is provided via props, use it\n    if (roomID) {\n      setRoomURL(`${window.location.origin}/join_room/${roomID}`);\n    } else {\n      // Check localStorage for an existing room ID\n      const storedRoomID = localStorage.getItem('roomID');\n      if (storedRoomID) {\n        setRoomID(storedRoomID);\n        setRoomURL(`${window.location.origin}/join_room/${storedRoomID}`);\n      } else {\n        // No room ID in localStorage, create a new room\n        const fetchRoomID = async () => {\n          try {\n            const response = await axios.post('http://localhost:5000/add_room');\n            const fetchedRoomID = response.data.room_id;\n            setNewRoomID(fetchedRoomID);\n            localStorage.setItem('roomID', fetchedRoomID);\n            setRoomURL(`${window.location.origin}/join_room/${fetchedRoomID}`);\n            setRoomID(fetchedRoomID);\n          } catch (error) {\n            console.error('Error creating room:', error);\n          }\n        };\n        fetchRoomID();\n      }\n    }\n  }, [roomID, setRoomID]);\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(roomURL);\n    alert('Room URL copied to clipboard!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-4\",\n    children: roomID || newRoomID ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"underline\",\n        children: [\"Room ID: \", roomID || newRoomID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCopyClick,\n        className: \"btn btn-sm btn-secondary\",\n        children: \"Copy Room URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Creating room...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomManager, \"nSd9+6TDGwsp2mgR+R/ZkQRPj9E=\");\n_c = RoomManager;\nexport default RoomManager;\nvar _c;\n$RefreshReg$(_c, \"RoomManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoomManager","roomID","setRoomID","_s","newRoomID","setNewRoomID","roomURL","setRoomURL","window","location","origin","storedRoomID","localStorage","getItem","fetchRoomID","response","post","fetchedRoomID","data","room_id","setItem","error","console","handleCopyClick","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/current-classes/CS4843/Pomigos/client/src/components/RoomManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RoomManager = ({ roomID, setRoomID }) => {\r\n    const [newRoomID, setNewRoomID] = useState(null);\r\n    const [roomURL, setRoomURL] = useState('');\r\n\r\n    useEffect(() => {\r\n        // If a roomID is provided via props, use it\r\n        if (roomID) {\r\n            setRoomURL(`${window.location.origin}/join_room/${roomID}`);\r\n        } else {\r\n            // Check localStorage for an existing room ID\r\n            const storedRoomID = localStorage.getItem('roomID');\r\n            if (storedRoomID) {\r\n                setRoomID(storedRoomID);\r\n                setRoomURL(`${window.location.origin}/join_room/${storedRoomID}`);\r\n            } else {\r\n                // No room ID in localStorage, create a new room\r\n                const fetchRoomID = async () => {\r\n                    try {\r\n                        const response = await axios.post('http://localhost:5000/add_room');\r\n                        const fetchedRoomID = response.data.room_id;\r\n                        setNewRoomID(fetchedRoomID);\r\n                        localStorage.setItem('roomID', fetchedRoomID);\r\n                        setRoomURL(`${window.location.origin}/join_room/${fetchedRoomID}`);\r\n                        setRoomID(fetchedRoomID);\r\n                    } catch (error) {\r\n                        console.error('Error creating room:', error);\r\n                    }\r\n                };\r\n\r\n                fetchRoomID();\r\n            }\r\n        }\r\n    }, [roomID, setRoomID]);\r\n\r\n    const handleCopyClick = () => {\r\n        navigator.clipboard.writeText(roomURL);\r\n        alert('Room URL copied to clipboard!');\r\n    };\r\n\r\n    return (\r\n        <div className='mx-4'>\r\n            {roomID || newRoomID ? (\r\n                <div>\r\n                    <p className='underline'>Room ID: {roomID || newRoomID}</p>\r\n                    <button onClick={handleCopyClick} className='btn btn-sm btn-secondary'>\r\n                        Copy Room URL\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <p>Creating room...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIK,MAAM,EAAE;MACRM,UAAU,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,cAAcT,MAAM,EAAE,CAAC;IAC/D,CAAC,MAAM;MACH;MACA,MAAMU,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACnD,IAAIF,YAAY,EAAE;QACdT,SAAS,CAACS,YAAY,CAAC;QACvBJ,UAAU,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,cAAcC,YAAY,EAAE,CAAC;MACrE,CAAC,MAAM;QACH;QACA,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;UAC5B,IAAI;YACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,gCAAgC,CAAC;YACnE,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO;YAC3Cd,YAAY,CAACY,aAAa,CAAC;YAC3BL,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAEH,aAAa,CAAC;YAC7CV,UAAU,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,cAAcO,aAAa,EAAE,CAAC;YAClEf,SAAS,CAACe,aAAa,CAAC;UAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAChD;QACJ,CAAC;QAEDP,WAAW,CAAC,CAAC;MACjB;IACJ;EACJ,CAAC,EAAE,CAACb,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEvB,MAAMqB,eAAe,GAAGA,CAAA,KAAM;IAC1BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACpB,OAAO,CAAC;IACtCqB,KAAK,CAAC,+BAA+B,CAAC;EAC1C,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChB5B,MAAM,IAAIG,SAAS,gBAChBL,OAAA;MAAA8B,QAAA,gBACI9B,OAAA;QAAG6B,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,WAAS,EAAC5B,MAAM,IAAIG,SAAS;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DlC,OAAA;QAAQmC,OAAO,EAAEX,eAAgB;QAACK,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAEvE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,gBAENlC,OAAA;MAAA8B,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9B,EAAA,CArDIH,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}